$(function(){	var $styleTarget={};	var initialElementStyles='';	var newElementStyles='';		var cssProperties =['id',						'background-color','class','position','overflow',						'float','clear','margin','padding',						'border','width','height','border'];		var basicAttrs = ['id','class'];		var selectListAttributes = ['position','overflow','float','clear'];		var storedAttributes = ['margin','padding','border'];		storedAttributes = ['background-color','position','overflow',						'float','clear','margin','padding',						'border','width','height','border'];			var newChildDefaultCSSProps = {'margin':'5px','width':'50px',									'height':'50px',									'border':'1px solid black'};			var hiddenSiblings = false;	$('.customizer input[name="backgroundColor"]').live('click',function(event){						if(hiddenSiblings==false){			$(this).parents('li').siblings().hide();			hiddenSiblings=true;			////console.log('hiding siblig');			$('.dezyner').dialog('option','width',620).dialog('option','height',400);;		}		else{			$(this).parents('li').siblings().show();			hiddenSiblings=false;			$('.dezyner').dialog('option','width','290px').dialog('option','height','auto');		}						colorPicker(event,undefined, undefined, undefined, false);	});			//Associate the dialogs for the designer panels	/*$('.dezyner').dialog(		{ 	autoOpen: false ,			position:[0,50],			width:320,			open:initializeParams		});	*/		$('.dezyner').dialog(		{ 	autoOpen: false ,			width:290		});	$('.css-properties').dialog({ autoOpen: false });				function init($target){		$styleTarget = $target;		initialElementStyles=$styleTarget.attr('style');				//These three properties are saved separately because jQuery cannot extract them directly		//initialElementStyles += 'margin:'+$styleTarget.data('margin') +";";		//initialElementStyles += 'padding:'+$styleTarget.data('padding')+";";		//initialElementStyles += 'border:'+$styleTarget.data('border')+";";				////console.log("initialElementStyles : " + initialElementStyles);	}		$('.wrapper div, .footer, .footer div').bind('click',function(event){		resetDezyner('.selection-panel-1');				//Save the initial state of the element so that it can be restored in case the user chooses to cancel		//the styling operation.		init($(event.target));				$( ".dezyner").dialog('open').dialog('option','title','Choose A Task');		event.stopPropagation();			}).css({'cursor':'pointer'});			function resetDezyner(selector){		$(selector).css({'display':'block'}).siblings().css({'display':'none'});	}			function setupCurrentProperties($propertyContainer){				//console.log('inside setupCurrentProperties');				$('.options li',$propertyContainer).each(function(key,attrDetails){					//Get the attribute name and the attribute value holder			var attrName = $('.attr-name',attrDetails).html();			var $valueHolder= $('.values',attrDetails).children();						//console.log("setupCurrentProperties : "+attrName);									//If it is an attribute, extract the attribute value from the element			if($.inArray(attrName,basicAttrs)>-1){				$valueHolder.val($styleTarget.attr(attrName));			}			else{				//If it is one of the attributes for which we use a select list				if($.inArray(attrName,selectListAttributes)>-1){					$( ".dezyner").dialog('option','title','Current Values');					//console.log("Select list attr : " + attrName + ' value : ' + $styleTarget.css(attrName));					$('option',$valueHolder)						.removeAttr('selected')						.each(function(){							if($(this).html()==$styleTarget.css(attrName)){								$(this).attr('selected','selected');							}						});					}				else{					//console.log('$styleTarget.data(attrName) : ' + $styleTarget.data(attrName));					if($styleTarget.data(attrName)){						$valueHolder.val($styleTarget.data(attrName));					}					else{						$valueHolder.val($styleTarget.css(attrName));					}													}							}					});			}		$('.customizer .apply').click(function(){		var styles = {};		//console.log("applying styles");				$('.customizer .options li').each(function(key,attrDetails){						//Get the attribute name and the attribute value holder			var attrName = $('.attr-name',attrDetails).html();			var $valueHolder= $('.values',attrDetails).children();			var value ='';						//If it is an attribute, then simply set it on the target element			if($.inArray(attrName,basicAttrs)>-1){				$styleTarget.attr(attrName,$valueHolder.val());			}			else{							//If it is a select field, get the selected option				if( $valueHolder[0].tagName =="SELECT"){					value=$valueHolder.find("option:selected").html();						}				else{					//If it is a textfield, then get the textfield's value					value = $valueHolder.val();				}				//Save the css style on a temporary style array				styles[attrName]=value;			}						//Eventually store the attributes and styles in the data map of the element			$styleTarget.data(attrName,value);								});						var styleAttrValue=''		newElementStyles='';		$.each(styles,function(key,value){			styleAttrValue += key +':' + value +';';			newElementStyles+= key +':' + value +'; <br/>';		});						$styleTarget.attr('style',styleAttrValue);			});		$('.dezyner .delete').click(function(){		$styleTarget.remove();	});			$('.dezyner .add-child-panel').click(function(event){		//console.log('asd');				var $parentElement = $styleTarget;				var $childElement = $('<div/>');				if($parentElement.css('overflow')!='auto'){			$parentElement.css('overflow','auto');		}				var parentHasFloatedChldren=false;				/*		$.each($parentElement.children().last(),function(key, value){			if($(this).css('float')=='left'&&$(this).css('clear')!='both'){				$childElement.css('float','left');			}		});		*/				var $lastChild  = $parentElement.children().last();		if(			($lastChild.css('float')=='left'||$lastChild.css('float')=='right')						&&			$lastChild.css('clear')!='both'){				$childElement.css('float',$lastChild.css('float'));			}				$.each($parentElement.children(),function(key, value){			var totalWidthOccupiedByChildren=0;			if($(this).css('float')=='left'&&$(this).css('float')!='right'){				$childElement.css('float','left');			}		});									$parentElement.append($childElement);						$.each(newChildDefaultCSSProps,function(key,value){			$childElement.data(key,value);		});								$.each(cssProperties,function(index,cssProperty){			$childElement.css(cssProperty,$childElement.data(cssProperty));		});						////console.log($parentElement.size());		////console.log($parentElement.css('overflow'));					});			$('.customizer .get-css').click(function(){		$('.css-properties').html(newElementStyles);		$('.css-properties').dialog('open').dialog('option','title','CSS for this div');	});		$('.customize').click(function(){		$(this).parent().hide();		setupCurrentProperties($('.customizer'));		$('.customizer').show();	});			$('.wrapper div, .footer, .footer div').hover(function(){		$(this).addClass('customize-selector');	},	function(){		$(this).removeClass('customize-selector');	});		$('.dezyner .selection-panel-1 div').hover(function(){		$(this).addClass('selection');	},	function(){		$(this).removeClass('selection');	});		$('.push').unbind('click').unbind('mouseover').unbind('mouseout');		});